// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using lab.Infra.Data.Context;

namespace lab.Infra.Data.Migrations
{
    [DbContext(typeof(labContext))]
    [Migration("20200121174224_AdicionandoRegitro0000")]
    partial class AdicionandoRegitro0000
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("lab.Domain.Entities.Bloco.b0.Reg0000", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CNPJ")
                        .HasColumnType("int")
                        .HasMaxLength(14);

                    b.Property<DateTime>("DT_FIN")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DT_INI")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("IND_ATIV")
                        .HasColumnType("int")
                        .HasMaxLength(1);

                    b.Property<int>("IND_NAT_PJ")
                        .HasColumnType("int")
                        .HasMaxLength(2);

                    b.Property<int>("IND_SIT_ESP")
                        .HasColumnType("int")
                        .HasMaxLength(1);

                    b.Property<int>("MunicipioId")
                        .HasColumnType("int");

                    b.Property<string>("NOME")
                        .IsRequired()
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<string>("NUM_REC_ANTERIOR")
                        .HasColumnType("varchar(41) CHARACTER SET utf8mb4")
                        .HasMaxLength(41);

                    b.Property<string>("REG")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(4) CHARACTER SET utf8mb4")
                        .HasMaxLength(4)
                        .HasDefaultValue("0000");

                    b.Property<int>("Ref311Id")
                        .HasColumnType("int");

                    b.Property<string>("SUFRAMA")
                        .HasColumnType("varchar(9) CHARACTER SET utf8mb4")
                        .HasMaxLength(9);

                    b.Property<int>("TIPO_ESCRIT")
                        .HasColumnType("int")
                        .HasMaxLength(1);

                    b.HasKey("Id");

                    b.HasIndex("MunicipioId");

                    b.HasIndex("Ref311Id");

                    b.ToTable("Regs0000");
                });

            modelBuilder.Entity("lab.Domain.Entities.Cadastro.Auxiliar.Municipio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CdMunicipio")
                        .IsRequired()
                        .HasColumnType("varchar(7) CHARACTER SET utf8mb4")
                        .HasMaxLength(7);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(150) CHARACTER SET utf8mb4")
                        .HasMaxLength(150);

                    b.Property<string>("Uf")
                        .IsRequired()
                        .HasColumnType("varchar(2) CHARACTER SET utf8mb4")
                        .HasMaxLength(2);

                    b.HasKey("Id");

                    b.ToTable("Municipios");
                });

            modelBuilder.Entity("lab.Domain.Entities.Cadastro.Auxiliar.Pais", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CdPais")
                        .IsRequired()
                        .HasColumnType("varchar(5) CHARACTER SET utf8mb4")
                        .HasMaxLength(5);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(150) CHARACTER SET utf8mb4")
                        .HasMaxLength(150);

                    b.HasKey("Id");

                    b.ToTable("Paises");
                });

            modelBuilder.Entity("lab.Domain.Entities.Cadastro.Referencias.Ref311", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("varchar(5) CHARACTER SET utf8mb4")
                        .HasMaxLength(5);

                    b.Property<string>("Leiaout")
                        .IsRequired()
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<DateTime>("Periodo")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Versao")
                        .IsRequired()
                        .HasColumnType("varchar(5) CHARACTER SET utf8mb4")
                        .HasMaxLength(5);

                    b.HasKey("Id");

                    b.ToTable("Ref311");
                });

            modelBuilder.Entity("lab.Domain.Entities.Registro.GrupoUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(350) CHARACTER SET utf8mb4")
                        .HasMaxLength(350);

                    b.HasKey("Id");

                    b.ToTable("GrupoUsers");
                });

            modelBuilder.Entity("lab.Domain.Entities.Registro.PessoaFisica", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Ativo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<DateTime>("Criacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.Property<string>("Sobrenome")
                        .IsRequired()
                        .HasColumnType("varchar(300) CHARACTER SET utf8mb4")
                        .HasMaxLength(300);

                    b.Property<string>("UrlFoto")
                        .HasColumnType("varchar(150) CHARACTER SET utf8mb4")
                        .HasMaxLength(150);

                    b.HasKey("Id");

                    b.ToTable("PessoasFisica");
                });

            modelBuilder.Entity("lab.Domain.Entities.Registro.PessoaJuridica", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasColumnType("varchar(150) CHARACTER SET utf8mb4")
                        .HasMaxLength(150);

                    b.Property<string>("CEP")
                        .IsRequired()
                        .HasColumnType("varchar(10) CHARACTER SET utf8mb4")
                        .HasMaxLength(10);

                    b.Property<string>("CNAE")
                        .HasColumnType("varchar(9) CHARACTER SET utf8mb4")
                        .HasMaxLength(9);

                    b.Property<string>("Celular")
                        .IsRequired()
                        .HasColumnType("varchar(15) CHARACTER SET utf8mb4")
                        .HasMaxLength(15);

                    b.Property<string>("Cnpj")
                        .IsRequired()
                        .HasColumnType("varchar(20) CHARACTER SET utf8mb4")
                        .HasMaxLength(20);

                    b.Property<string>("Complemento")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<int>("DmContribuicao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.Property<string>("InscricaoEstadual")
                        .HasColumnType("varchar(20) CHARACTER SET utf8mb4")
                        .HasMaxLength(20);

                    b.Property<string>("InscricaoMunicipal")
                        .HasColumnType("varchar(20) CHARACTER SET utf8mb4")
                        .HasMaxLength(20);

                    b.Property<int>("Matriz")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("MunicipioId")
                        .HasColumnType("int");

                    b.Property<int>("NaturezaJuridica")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(450) CHARACTER SET utf8mb4")
                        .HasMaxLength(450);

                    b.Property<string>("NomeContato")
                        .HasColumnType("varchar(150) CHARACTER SET utf8mb4")
                        .HasMaxLength(150);

                    b.Property<string>("NomeFantasia")
                        .IsRequired()
                        .HasColumnType("varchar(450) CHARACTER SET utf8mb4")
                        .HasMaxLength(450);

                    b.Property<string>("NrSuframa")
                        .HasColumnType("varchar(9) CHARACTER SET utf8mb4")
                        .HasMaxLength(9);

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasColumnType("varchar(10) CHARACTER SET utf8mb4")
                        .HasMaxLength(10);

                    b.Property<int>("PessoaFisicaId")
                        .HasColumnType("int");

                    b.Property<string>("Telefone")
                        .HasColumnType("varchar(15) CHARACTER SET utf8mb4")
                        .HasMaxLength(15);

                    b.Property<string>("WebSite")
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.HasKey("Id");

                    b.HasIndex("MunicipioId");

                    b.HasIndex("PessoaFisicaId");

                    b.ToTable("PessoasJuridica");
                });

            modelBuilder.Entity("lab.Domain.Entities.Registro.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Ativo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<DateTime>("Criacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(350) CHARACTER SET utf8mb4")
                        .HasMaxLength(350);

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("varchar(64) CHARACTER SET utf8mb4")
                        .HasMaxLength(64);

                    b.Property<string>("Sobrenome")
                        .IsRequired()
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.Property<string>("UrlFoto")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Usuario")
                        .IsRequired()
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("lab.Domain.Entities.Registro.UsersGrupo", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("GrupoUserId")
                        .HasColumnType("int");

                    b.Property<int>("Ativo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("UserId", "GrupoUserId");

                    b.HasIndex("GrupoUserId");

                    b.ToTable("UsersGrupo");
                });

            modelBuilder.Entity("lab.Domain.Entities.Bloco.b0.Reg0000", b =>
                {
                    b.HasOne("lab.Domain.Entities.Cadastro.Auxiliar.Municipio", "Municipio")
                        .WithMany("Regs0000")
                        .HasForeignKey("MunicipioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("lab.Domain.Entities.Cadastro.Referencias.Ref311", "Ref311")
                        .WithMany("Regs0000")
                        .HasForeignKey("Ref311Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("lab.Domain.Entities.Registro.PessoaJuridica", b =>
                {
                    b.HasOne("lab.Domain.Entities.Cadastro.Auxiliar.Municipio", "Municipio")
                        .WithMany("PessoasJuridica")
                        .HasForeignKey("MunicipioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("lab.Domain.Entities.Registro.PessoaFisica", "PessoaFisica")
                        .WithMany("PessoasJuridica")
                        .HasForeignKey("PessoaFisicaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("lab.Domain.Entities.Registro.UsersGrupo", b =>
                {
                    b.HasOne("lab.Domain.Entities.Registro.GrupoUser", "GrupoUser")
                        .WithMany("UsersGrupo")
                        .HasForeignKey("GrupoUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("lab.Domain.Entities.Registro.User", "User")
                        .WithMany("UsersGrupo")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
