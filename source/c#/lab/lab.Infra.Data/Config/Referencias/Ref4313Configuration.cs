using lab.Domain.Entities.Cadastro.Referencias;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using System;
using System.Globalization;

namespace lab.Infra.Data.Config.Referencias
{
    public class Ref4313Configuration : IEntityTypeConfiguration<Ref4313>
    {
        public void Configure(EntityTypeBuilder<Ref4313> builder)
        {
            builder.HasKey(r => r.Id);
            builder.Property(r => r.Codigo).HasMaxLength(30).IsRequired();
            builder.Property(r => r.Descricao).HasMaxLength(255).IsRequired();
            builder.Property(r => r.DataInicial).IsRequired();
            builder.Property(r => r.Ncm).IsRequired();
			builder.HasData(
				new Ref4313() { Id = 1, Codigo = "101", Descricao = "Adubos ou fertilizantes classificados no Capítulo 31, exceto os produtos de uso veterinário, da TIPI, e suas matérias-primas", DataInicial = DateTime.ParseExact("01012009", "ddMMyyyy", CultureInfo.InvariantCulture), DataFinal = null, Ncm = "", NcmEx = "", ExIpi = "" },
				new Ref4313() { Id = 2, Codigo = "102", Descricao = "Defensivos agropecuários classificados na posição 38.08 da TIPI e suas matérias-primas", DataInicial = DateTime.ParseExact("01012009", "ddMMyyyy", CultureInfo.InvariantCulture), DataFinal = null, Ncm = "", NcmEx = "", ExIpi = "" },
				new Ref4313() { Id = 3, Codigo = "103", Descricao = "Sementes e mudas destinadas à semeadura e plantio, em conformidade com o disposto na Lei no 10.711/03, e produtos de natureza biológica utilizados em sua produção", DataInicial = DateTime.ParseExact("01012009", "ddMMyyyy", CultureInfo.InvariantCulture), DataFinal = null, Ncm = "", NcmEx = "", ExIpi = "" },
				new Ref4313() { Id = 4, Codigo = "104", Descricao = "Corretivo de solo de origem mineral classificado no Capítulo 25 da TIPI", DataInicial = DateTime.ParseExact("01012009", "ddMMyyyy", CultureInfo.InvariantCulture), DataFinal = null, Ncm = "", NcmEx = "", ExIpi = "" },
				new Ref4313() { Id = 5, Codigo = "105", Descricao = "Legumes de vagem, secos, em grão, mesmo pelados ou partidos; arroz; farinhas e sêmolas", DataInicial = DateTime.ParseExact("01012009", "ddMMyyyy", CultureInfo.InvariantCulture), DataFinal = null, Ncm = "07133319;07133329;07133399;100620;100630;110620", NcmEx = "", ExIpi = "" },
				new Ref4313() { Id = 6, Codigo = "106", Descricao = "Inoculantes agrícolas produzidos a partir de bactérias fixadoras de nitrogênio classificados no código 3002.90.99 da TIPI", DataInicial = DateTime.ParseExact("01012009", "ddMMyyyy", CultureInfo.InvariantCulture), DataFinal = null, Ncm = "", NcmEx = "", ExIpi = "" },
				new Ref4313() { Id = 7, Codigo = "107", Descricao = "Vacinas para medicina veterinária", DataInicial = DateTime.ParseExact("01012009", "ddMMyyyy", CultureInfo.InvariantCulture), DataFinal = null, Ncm = "300230", NcmEx = "", ExIpi = "" },
				new Ref4313() { Id = 8, Codigo = "108", Descricao = "Farinha, grumos e sêmolas, grãos esmagados ou em flocos, de milho, classificados, respectivamente, nos códigos 1102.20, 1103.13 e 1104.19, todos da TIPI", DataInicial = DateTime.ParseExact("01012009", "ddMMyyyy", CultureInfo.InvariantCulture), DataFinal = null, Ncm = "110220;110313", NcmEx = "", ExIpi = "" },
				new Ref4313() { Id = 9, Codigo = "109", Descricao = "Pintos de 1 (um) dia", DataInicial = DateTime.ParseExact("01012009", "ddMMyyyy", CultureInfo.InvariantCulture), DataFinal = null, Ncm = "010511", NcmEx = "", ExIpi = "" },
				new Ref4313() { Id = 10, Codigo = "110", Descricao = "Leite fluido pasteurizado ou industrializado, na forma de ultrapasteurizado,leite em pó,integral,semidesnatado ou desnatado,leite fermentado,bebidas e compostos lácteos e fórmulas infantis,assim definidas conforme previsão legal específica,destinados ao consumo humano ou utilizados na industrialização de produtos que se destinam ao consumo humano", DataInicial = DateTime.ParseExact("01012009", "ddMMyyyy", CultureInfo.InvariantCulture), DataFinal = null, Ncm = "", NcmEx = "", ExIpi = "" },
				new Ref4313() { Id = 11, Codigo = "111", Descricao = "Queijos tipo mozarela, minas, prato, queijo de coalho, ricota, requeijão, queijo provolone, queijo parmesão e queijo fresco não maturado", DataInicial = DateTime.ParseExact("01012009", "ddMMyyyy", CultureInfo.InvariantCulture), DataFinal = null, Ncm = "", NcmEx = "", ExIpi = "" },
				new Ref4313() { Id = 12, Codigo = "112", Descricao = "Soro de leite fluido a ser empregado na industrialização de produtos destinados ao consumo humano", DataInicial = DateTime.ParseExact("01012009", "ddMMyyyy", CultureInfo.InvariantCulture), DataFinal = null, Ncm = "", NcmEx = "", ExIpi = "" },
				new Ref4313() { Id = 13, Codigo = "113", Descricao = "Farinha de trigo", DataInicial = DateTime.ParseExact("01012009", "ddMMyyyy", CultureInfo.InvariantCulture), DataFinal = null, Ncm = "11010010", NcmEx = "", ExIpi = "" },
				new Ref4313() { Id = 14, Codigo = "114", Descricao = "Trigo", DataInicial = DateTime.ParseExact("01012009", "ddMMyyyy", CultureInfo.InvariantCulture), DataFinal = null, Ncm = "1001", NcmEx = "", ExIpi = "" },
				new Ref4313() { Id = 15, Codigo = "115", Descricao = "Pré-misturas próprias para fabricação de pão comum e pão comum", DataInicial = DateTime.ParseExact("01012009", "ddMMyyyy", CultureInfo.InvariantCulture), DataFinal = null, Ncm = "19012000;19059090", NcmEx = "", ExIpi = "01" },
				new Ref4313() { Id = 16, Codigo = "116", Descricao = "Produtos hortícolas e frutas", DataInicial = DateTime.ParseExact("01012009", "ddMMyyyy", CultureInfo.InvariantCulture), DataFinal = null, Ncm = "07;08", NcmEx = "", ExIpi = "" },
				new Ref4313() { Id = 17, Codigo = "117", Descricao = "Ovos", DataInicial = DateTime.ParseExact("01012009", "ddMMyyyy", CultureInfo.InvariantCulture), DataFinal = null, Ncm = "0407", NcmEx = "", ExIpi = "" },
				new Ref4313() { Id = 18, Codigo = "118", Descricao = "Venda de semens e embriões", DataInicial = DateTime.ParseExact("01012009", "ddMMyyyy", CultureInfo.InvariantCulture), DataFinal = null, Ncm = "05111000;05119910;05119920", NcmEx = "", ExIpi = "" },
				new Ref4313() { Id = 19, Codigo = "119", Descricao = "Massas alimentícias classificadas na posição 19.02 da TIPI.", DataInicial = DateTime.ParseExact("02122011", "ddMMyyyy", CultureInfo.InvariantCulture), DataFinal = DateTime.ParseExact("30062012", "ddMMyyyy", CultureInfo.InvariantCulture), Ncm = "19021100;19021900;19022000;19023000", NcmEx = "", ExIpi = "" },
				new Ref4313() { Id = 20, Codigo = "119", Descricao = "Massas alimentícias classificadas na posição 19.02 da TIPI", DataInicial = DateTime.ParseExact("01072012", "ddMMyyyy", CultureInfo.InvariantCulture), DataFinal = null, Ncm = "19021100;19021900;19022000;19023000", NcmEx = "", ExIpi = "" },
				new Ref4313() { Id = 21, Codigo = "120", Descricao = "Queijo do reino", DataInicial = DateTime.ParseExact("31052012", "ddMMyyyy", CultureInfo.InvariantCulture), DataFinal = null, Ncm = "", NcmEx = "", ExIpi = "" },
				new Ref4313() { Id = 22, Codigo = "121", Descricao = "Carnes bovina, suína, ovina, caprina e de aves e produtos de origem animal:02.01, 02.02, 0206.10.00, 0206.2, 0210.20.00, 0506.90.00, 0510.00.10 e 1502.10.1;02.03, 0206.30.00, 0206.4, 02.07, 02.09 e 0210.1 e carne de frango do código 0210.99.00;02.04 e miudezas comestíveis de ovinos e caprinos do código 0206.80.00", DataInicial = DateTime.ParseExact("08032013", "ddMMyyyy", CultureInfo.InvariantCulture), DataFinal = null, Ncm = "0201;0202;02061000;02062;02102000;05069000;05100010;1502101;0203;0204;02063000;02064;0207;0209;02101", NcmEx = "", ExIpi = "" },
				new Ref4313() { Id = 23, Codigo = "122", Descricao = "Peixes e outros produtos", DataInicial = DateTime.ParseExact("08032013", "ddMMyyyy", CultureInfo.InvariantCulture), DataFinal = null, Ncm = "0302;0303;0304", NcmEx = "03029000", ExIpi = "" },
				new Ref4313() { Id = 24, Codigo = "123", Descricao = "Café classificado nos códigos 09.01 e 2101.1 da Tipi", DataInicial = DateTime.ParseExact("08032013", "ddMMyyyy", CultureInfo.InvariantCulture), DataFinal = null, Ncm = "", NcmEx = "", ExIpi = "" },
				new Ref4313() { Id = 25, Codigo = "124", Descricao = "Açúcar", DataInicial = DateTime.ParseExact("08032013", "ddMMyyyy", CultureInfo.InvariantCulture), DataFinal = null, Ncm = "17019900;17011400", NcmEx = "", ExIpi = "" },
				new Ref4313() { Id = 26, Codigo = "125", Descricao = "Óleo de soja e outros óleos vegetais", DataInicial = DateTime.ParseExact("08032013", "ddMMyyyy", CultureInfo.InvariantCulture), DataFinal = null, Ncm = "1507;1508;1509;1510;1511;1512;1513;1514", NcmEx = "", ExIpi = "" },
				new Ref4313() { Id = 27, Codigo = "126", Descricao = "Manteiga", DataInicial = DateTime.ParseExact("08032013", "ddMMyyyy", CultureInfo.InvariantCulture), DataFinal = null, Ncm = "04051000", NcmEx = "", ExIpi = "" },
				new Ref4313() { Id = 28, Codigo = "127", Descricao = "Margarina classificada no código 1517.10.00", DataInicial = DateTime.ParseExact("08032013", "ddMMyyyy", CultureInfo.InvariantCulture), DataFinal = null, Ncm = "", NcmEx = "", ExIpi = "" },
				new Ref4313() { Id = 29, Codigo = "128", Descricao = "Sabões de toucador classificados no código 3401.11.90 EX01 da Tipi", DataInicial = DateTime.ParseExact("08032013", "ddMMyyyy", CultureInfo.InvariantCulture), DataFinal = null, Ncm = "", NcmEx = "", ExIpi = "" },
				new Ref4313() { Id = 30, Codigo = "129", Descricao = "Produtos para higiene bucal ou dentária", DataInicial = DateTime.ParseExact("08032013", "ddMMyyyy", CultureInfo.InvariantCulture), DataFinal = null, Ncm = "3306", NcmEx = "", ExIpi = "" },
				new Ref4313() { Id = 31, Codigo = "130", Descricao = "Papel higiênico", DataInicial = DateTime.ParseExact("08032013", "ddMMyyyy", CultureInfo.InvariantCulture), DataFinal = null, Ncm = "48181000", NcmEx = "", ExIpi = "" },
				new Ref4313() { Id = 32, Codigo = "201", Descricao = "Aeronaves classificadas na posição 88.02 da TIPI", DataInicial = DateTime.ParseExact("01012009", "ddMMyyyy", CultureInfo.InvariantCulture), DataFinal = null, Ncm = "8802", NcmEx = "", ExIpi = "" },
				new Ref4313() { Id = 33, Codigo = "202", Descricao = "Partes,peças,ferramentais,componentes,insumos,fluidos hidráulicos,tintas,anticorrosivos,lubrificantes,equipamentos,serviços e matérias-primas a serem empregados na manutenção,conservação,modernização,reparo,revisão,conversão e industrialização das aeronaves,seus motores,partes,componentes,ferramentais e equipamentos das aeronaves ref. no código 201", DataInicial = DateTime.ParseExact("01012009", "ddMMyyyy", CultureInfo.InvariantCulture), DataFinal = null, Ncm = "", NcmEx = "", ExIpi = "" },
				new Ref4313() { Id = 34, Codigo = "203", Descricao = "Álcool anidro adicionado à gasolina, por distribuidores", DataInicial = DateTime.ParseExact("01012009", "ddMMyyyy", CultureInfo.InvariantCulture), DataFinal = null, Ncm = "", NcmEx = "", ExIpi = "" },
				new Ref4313() { Id = 35, Codigo = "204", Descricao = "Álcool, inclusive para fins carburantes, em operações realizadas em bolsa de mercadorias e futuros, exceto quando ocorra a liquidação física do contrato", DataInicial = DateTime.ParseExact("01012009", "ddMMyyyy", CultureInfo.InvariantCulture), DataFinal = null, Ncm = "", NcmEx = "", ExIpi = "" },
				new Ref4313() { Id = 36, Codigo = "205", Descricao = "Carvão mineral destinado à geração de energia elétrica", DataInicial = DateTime.ParseExact("01012009", "ddMMyyyy", CultureInfo.InvariantCulture), DataFinal = null, Ncm = "", NcmEx = "", ExIpi = "" },
				new Ref4313() { Id = 37, Codigo = "206", Descricao = "Biodiesel fabricado a partir de matérias-primas produzidas nas regiões norte, nordeste e no semi-árido, por agricultor familiar enquadrado no PRONAF", DataInicial = DateTime.ParseExact("01012009", "ddMMyyyy", CultureInfo.InvariantCulture), DataFinal = null, Ncm = "", NcmEx = "", ExIpi = "" },
				new Ref4313() { Id = 38, Codigo = "207", Descricao = "Valores recebidos pelos concessionários de que trata a Lei nº 6.729/1979, pela intermediação ou entrega dos veículos vendidos classificados nas posições 87.03 e 87.04 da TIPI, diretamente ao consumidor final", DataInicial = DateTime.ParseExact("01012009", "ddMMyyyy", CultureInfo.InvariantCulture), DataFinal = null, Ncm = "", NcmEx = "", ExIpi = "" },
				new Ref4313() { Id = 39, Codigo = "208", Descricao = "Veículos novos montados sobre chassis,com capacidade para vinte e três a quarenta e quatro passageiros,classificados no código 8702.10.00 Ex 02 e 8702.90.90 Ex 02, da TIPI,destinados ao transporte escolar para a educação básica na zona rural das redes estadual,municipal e distrital,quando adquiridos pelos Estados,Municípios e pelo Distrito Federal", DataInicial = DateTime.ParseExact("01012009", "ddMMyyyy", CultureInfo.InvariantCulture), DataFinal = null, Ncm = "", NcmEx = "", ExIpi = "" },
				new Ref4313() { Id = 40, Codigo = "209", Descricao = "Embarcações novas, com capacidade para vinte a trinta e cinco passageiros, classificadas no código 8901.90.00 da TIPI, destinadas ao transporte escolar para a educação básica na zona rural das redes estadual, municipal e distrital, quando adquiridos pelos Estados, Municípios e pelo Distrito Federal", DataInicial = DateTime.ParseExact("01012009", "ddMMyyyy", CultureInfo.InvariantCulture), DataFinal = null, Ncm = "", NcmEx = "", ExIpi = "" },
				new Ref4313() { Id = 41, Codigo = "210", Descricao = "Materiais e equipamentos, inclusive partes, peças e componentes, destinados ao emprego na construção, conservação, modernização, conversão ou reparo de embarcações registradas ou pré-registradas no Registro Especial Brasileiro", DataInicial = DateTime.ParseExact("01012009", "ddMMyyyy", CultureInfo.InvariantCulture), DataFinal = null, Ncm = "", NcmEx = "", ExIpi = "" },
				new Ref4313() { Id = 42, Codigo = "211", Descricao = "Veículos e carros blindados de combate, novos, armados ou não, e suas partes, produzidos no Brasil, com peso bruto total até 30 (trinta) toneladas, classificados na posição 8710.00.00 da TIPI, destinados ao uso das Forças Armadas ou órgãos de segurança pública brasileiros, quando adquiridos por órgãos e entidades da administração pública direta", DataInicial = DateTime.ParseExact("01012009", "ddMMyyyy", CultureInfo.InvariantCulture), DataFinal = null, Ncm = "", NcmEx = "", ExIpi = "" },
				new Ref4313() { Id = 43, Codigo = "212", Descricao = "Gás natural canalizado, destinado à produção de energia elétrica pelas usinas integrantes do Programa Prioritário de Termoeletricidade, nos termos e condições estabelecidos em ato conjunto dos Ministros de Estado de Minas Energia e da Fazenda", DataInicial = DateTime.ParseExact("01012009", "ddMMyyyy", CultureInfo.InvariantCulture), DataFinal = null, Ncm = "", NcmEx = "", ExIpi = "" },
				new Ref4313() { Id = 44, Codigo = "213", Descricao = "Serviços de transporte ferroviário em sistema de trens de alta velocidade (TAV), assim entendido como a composição utilizada para efetuar a prestação do serviço público de transporte ferroviário que consiga atingir velocidade igual ou superior a 250 km/h (duzentos e cinquenta quilômetros por hora).", DataInicial = DateTime.ParseExact("01112011", "ddMMyyyy", CultureInfo.InvariantCulture), DataFinal = null, Ncm = "", NcmEx = "", ExIpi = "" },
				new Ref4313() { Id = 45, Codigo = "214", Descricao = "Receitas decorrentes da prestação de serviços regulares de transporte coletivo municipal rodoviário, metroviário e ferroviário de passageiros, inclusive as decorrentes da prestação dos referidos serviços no território de região metropolitana regularmente constituída", DataInicial = DateTime.ParseExact("31052013", "ddMMyyyy", CultureInfo.InvariantCulture), DataFinal = null, Ncm = "", NcmEx = "", ExIpi = "" },
				new Ref4313() { Id = 46, Codigo = "301", Descricao = "Produtos classificados na posição 87.13 da NCM (cadeiras de rodas e outros veículos)", DataInicial = DateTime.ParseExact("01012009", "ddMMyyyy", CultureInfo.InvariantCulture), DataFinal = null, Ncm = "8713", NcmEx = "", ExIpi = "" },
				new Ref4313() { Id = 47, Codigo = "302", Descricao = "Artigos e aparelhos ortopédicos ou para fraturas classificados no código 90.21.10 da NCM", DataInicial = DateTime.ParseExact("01012009", "ddMMyyyy", CultureInfo.InvariantCulture), DataFinal = null, Ncm = "902110", NcmEx = "", ExIpi = "" },
				new Ref4313() { Id = 48, Codigo = "303", Descricao = "Artigos e aparelhos de próteses classificados no código 90.21.3 da NCM", DataInicial = DateTime.ParseExact("01012009", "ddMMyyyy", CultureInfo.InvariantCulture), DataFinal = null, Ncm = "90213", NcmEx = "", ExIpi = "" },
				new Ref4313() { Id = 49, Codigo = "304", Descricao = "Almofadas antiescaras classificadas nos Capítulos 39, 40, 63 e 94 da NCM", DataInicial = DateTime.ParseExact("01012009", "ddMMyyyy", CultureInfo.InvariantCulture), DataFinal = null, Ncm = "", NcmEx = "", ExIpi = "" },
				new Ref4313() { Id = 50, Codigo = "305", Descricao = "Bens relacionados em ato do Poder Executivo para aplicação nas Unidades Modulares de Saúde de que trata o Convênio ICMS no 114/2009 quando vendidos a órgãos da administração pública direta federal, estadual, distrital e municipal", DataInicial = DateTime.ParseExact("01012009", "ddMMyyyy", CultureInfo.InvariantCulture), DataFinal = null, Ncm = "", NcmEx = "", ExIpi = "" },
				new Ref4313() { Id = 51, Codigo = "306", Descricao = "Produtos químicos classificados no Capítulo 29 da Nomenclatura Comum do Mercosul - NCM", DataInicial = DateTime.ParseExact("01012009", "ddMMyyyy", CultureInfo.InvariantCulture), DataFinal = null, Ncm = "", NcmEx = "", ExIpi = "" },
				new Ref4313() { Id = 52, Codigo = "307", Descricao = "Produtos químicos intermediários de síntese, classificados no Capítulo 29 da NCM", DataInicial = DateTime.ParseExact("01012009", "ddMMyyyy", CultureInfo.InvariantCulture), DataFinal = null, Ncm = "", NcmEx = "", ExIpi = "" },
				new Ref4313() { Id = 53, Codigo = "308", Descricao = "Produtos destinados ao uso em hospitais, clínicas e consultórios médicos e odontológicos, campanhas de saúde realizadas pelo poder público, laboratório de anatomia patológica, citológica ou de análises clínicas, classificados nas posições 30.02, 30.06, 39.26, 40.15 e 90.18, da NCM", DataInicial = DateTime.ParseExact("01012009", "ddMMyyyy", CultureInfo.InvariantCulture), DataFinal = null, Ncm = "", NcmEx = "", ExIpi = "" },
				new Ref4313() { Id = 54, Codigo = "309", Descricao = "Produtos classificados nos códigos 8443.32.22, 8469.00.39 Ex 01, 8714.20.00, e 9021.40.00, todos da TIPI", DataInicial = DateTime.ParseExact("18112011", "ddMMyyyy", CultureInfo.InvariantCulture), DataFinal = DateTime.ParseExact("17052012", "ddMMyyyy", CultureInfo.InvariantCulture), Ncm = "84433222;84690039;87142000;90214000", NcmEx = "01", ExIpi = "" },
				new Ref4313() { Id = 55, Codigo = "309", Descricao = "Produtos classificados nos códigos 8443.32.22, 8469.00.39 Ex 01, 8714.20.00, 9021.40.00, 9021.90.82 e 9021.90.92 todos da TIPI", DataInicial = DateTime.ParseExact("18052012", "ddMMyyyy", CultureInfo.InvariantCulture), DataFinal = null, Ncm = "84433222;87142000;90214000;90219082;90219092", NcmEx = "", ExIpi = "" },
				new Ref4313() { Id = 56, Codigo = "309", Descricao = "Produtos classificados nos códigos 8443.32.22, 8469.00.39 Ex 01, 8714.20.00, 9021.40.00, 9021.90.82 e 9021.90.92 todos da TIPI", DataInicial = DateTime.ParseExact("18052012", "ddMMyyyy", CultureInfo.InvariantCulture), DataFinal = null, Ncm = "84690039", NcmEx = "", ExIpi = "01" },
				new Ref4313() { Id = 57, Codigo = "310", Descricao = "Calculadoras equipadas com sintetizador de voz classificadas no código 8470.10.00 da TIPI", DataInicial = DateTime.ParseExact("18112011", "ddMMyyyy", CultureInfo.InvariantCulture), DataFinal = DateTime.ParseExact("17052012", "ddMMyyyy", CultureInfo.InvariantCulture), Ncm = "", NcmEx = "", ExIpi = "" },
				new Ref4313() { Id = 58, Codigo = "310", Descricao = "Calculadoras equipadas com sintetizador de voz classificadas no código 8470.10.00 EX01 da TIPI", DataInicial = DateTime.ParseExact("18052012", "ddMMyyyy", CultureInfo.InvariantCulture), DataFinal = null, Ncm = "84701000", NcmEx = "", ExIpi = "01" },
				new Ref4313() { Id = 59, Codigo = "311", Descricao = "Teclados com colmeia classificados no código 8471.60.52 da TIPI", DataInicial = DateTime.ParseExact("18112011", "ddMMyyyy", CultureInfo.InvariantCulture), DataFinal = null, Ncm = "", NcmEx = "", ExIpi = "" },
				new Ref4313() { Id = 60, Codigo = "312", Descricao = "Indicadores ou apontadores - mouses - com entrada para acionador classificados no código 8471.60.53 da TIPI", DataInicial = DateTime.ParseExact("18112011", "ddMMyyyy", CultureInfo.InvariantCulture), DataFinal = null, Ncm = "", NcmEx = "", ExIpi = "" },
				new Ref4313() { Id = 61, Codigo = "313", Descricao = "Linhas braile classificadas no código 8471.60.90 da TIPI", DataInicial = DateTime.ParseExact("18112011", "ddMMyyyy", CultureInfo.InvariantCulture), DataFinal = DateTime.ParseExact("17052012", "ddMMyyyy", CultureInfo.InvariantCulture), Ncm = "", NcmEx = "", ExIpi = "" },
				new Ref4313() { Id = 62, Codigo = "313", Descricao = "Linhas braile classificadas no código 8471.60.90 EX01 da TIPI", DataInicial = DateTime.ParseExact("18052012", "ddMMyyyy", CultureInfo.InvariantCulture), DataFinal = null, Ncm = "84716090", NcmEx = "", ExIpi = "01" },
				new Ref4313() { Id = 63, Codigo = "314", Descricao = "Digitalizadores de imagens - scanners - equipados com sintetizador de voz classificados no código 8471.90.14 da TIPI", DataInicial = DateTime.ParseExact("18112011", "ddMMyyyy", CultureInfo.InvariantCulture), DataFinal = DateTime.ParseExact("17052012", "ddMMyyyy", CultureInfo.InvariantCulture), Ncm = "", NcmEx = "", ExIpi = "" },
				new Ref4313() { Id = 64, Codigo = "314", Descricao = "Digitalizadores de imagens - scanners - equipados com sintetizador de voz classificados no código 8471.90.14 EX01 da TIPI", DataInicial = DateTime.ParseExact("18052012", "ddMMyyyy", CultureInfo.InvariantCulture), DataFinal = null, Ncm = "84719014", NcmEx = "", ExIpi = "01" },
				new Ref4313() { Id = 65, Codigo = "315", Descricao = "Duplicadores braile classificados no código 8472.10.00 da TIPI", DataInicial = DateTime.ParseExact("18112011", "ddMMyyyy", CultureInfo.InvariantCulture), DataFinal = DateTime.ParseExact("17052012", "ddMMyyyy", CultureInfo.InvariantCulture), Ncm = "", NcmEx = "", ExIpi = "" },
				new Ref4313() { Id = 66, Codigo = "315", Descricao = "Duplicadores braile classificados no código 8472.10.00 EX 01 da TIPI", DataInicial = DateTime.ParseExact("18052012", "ddMMyyyy", CultureInfo.InvariantCulture), DataFinal = null, Ncm = "84721000", NcmEx = "", ExIpi = "01" },
				new Ref4313() { Id = 67, Codigo = "316", Descricao = "Acionadores de pressão classificados no código 8471.60.53 da TIPI", DataInicial = DateTime.ParseExact("18112011", "ddMMyyyy", CultureInfo.InvariantCulture), DataFinal = DateTime.ParseExact("17052012", "ddMMyyyy", CultureInfo.InvariantCulture), Ncm = "", NcmEx = "", ExIpi = "" },
				new Ref4313() { Id = 68, Codigo = "316", Descricao = "Acionadores de pressão classificados no código 8471.60.53 EX02 da TIPI", DataInicial = DateTime.ParseExact("18052012", "ddMMyyyy", CultureInfo.InvariantCulture), DataFinal = null, Ncm = "84716053", NcmEx = "", ExIpi = "02" },
				new Ref4313() { Id = 69, Codigo = "317", Descricao = "Lupas eletrônicas do tipo utilizado por pessoas com deficiência visual classificadas no código 8525.80.19 da TIPI", DataInicial = DateTime.ParseExact("18112011", "ddMMyyyy", CultureInfo.InvariantCulture), DataFinal = DateTime.ParseExact("17052012", "ddMMyyyy", CultureInfo.InvariantCulture), Ncm = "", NcmEx = "", ExIpi = "" },
				new Ref4313() { Id = 70, Codigo = "317", Descricao = "Lupas eletrônicas do tipo utilizado por pessoas com deficiência visual classificadas no código 8525.80.19 EX 01 da TIPI", DataInicial = DateTime.ParseExact("18052012", "ddMMyyyy", CultureInfo.InvariantCulture), DataFinal = null, Ncm = "85258019", NcmEx = "", ExIpi = "01" },
				new Ref4313() { Id = 71, Codigo = "318", Descricao = "Implantes cocleares classificados no código 9021.90.19 da TIPI", DataInicial = DateTime.ParseExact("18112011", "ddMMyyyy", CultureInfo.InvariantCulture), DataFinal = DateTime.ParseExact("17052012", "ddMMyyyy", CultureInfo.InvariantCulture), Ncm = "", NcmEx = "", ExIpi = "" },
				new Ref4313() { Id = 72, Codigo = "318", Descricao = "Implantes cocleares classificados no código 9021.40.00 da TIPI", DataInicial = DateTime.ParseExact("18052012", "ddMMyyyy", CultureInfo.InvariantCulture), DataFinal = null, Ncm = "", NcmEx = "", ExIpi = "" },
				new Ref4313() { Id = 73, Codigo = "319", Descricao = "Próteses oculares classificadas no código 9021.90.89 da TIPI.", DataInicial = DateTime.ParseExact("18112011", "ddMMyyyy", CultureInfo.InvariantCulture), DataFinal = DateTime.ParseExact("17052012", "ddMMyyyy", CultureInfo.InvariantCulture), Ncm = "", NcmEx = "", ExIpi = "" },
				new Ref4313() { Id = 74, Codigo = "319", Descricao = "Próteses oculares classificadas no código 9021.39.80 da TIPI.", DataInicial = DateTime.ParseExact("18052012", "ddMMyyyy", CultureInfo.InvariantCulture), DataFinal = null, Ncm = "", NcmEx = "", ExIpi = "" },
				new Ref4313() { Id = 75, Codigo = "320", Descricao = "Programas - softwares - de leitores de tela que convertem texto em voz sintetizada para auxílio de pessoas com deficiência visual", DataInicial = DateTime.ParseExact("18052012", "ddMMyyyy", CultureInfo.InvariantCulture), DataFinal = null, Ncm = "", NcmEx = "", ExIpi = "" },
				new Ref4313() { Id = 76, Codigo = "321", Descricao = "Aparelhos contendo programas - softwares - de leitores de tela que convertem texto em caracteres braile, para utilização de surdos-cegos", DataInicial = DateTime.ParseExact("18052012", "ddMMyyyy", CultureInfo.InvariantCulture), DataFinal = null, Ncm = "", NcmEx = "", ExIpi = "" },
				new Ref4313() { Id = 77, Codigo = "322", Descricao = "Neuroestimuladores para tremor essencial/Parkinson, classificados no código 9021.90.19, e seus acessórios, classificados nos códigos 9018.90.99, 9021.90.91 e 9021.90.99, todos da Tipi", DataInicial = DateTime.ParseExact("18052012", "ddMMyyyy", CultureInfo.InvariantCulture), DataFinal = null, Ncm = "", NcmEx = "", ExIpi = "" },
				new Ref4313() { Id = 78, Codigo = "401", Descricao = "Venda a varejo de unidades de processamento digital classificadas no código 8471.50.10 da TIPI, desde que o preço de venda de cada unidade não exceda a R$ 2.000,00", DataInicial = DateTime.ParseExact("01012009", "ddMMyyyy", CultureInfo.InvariantCulture), DataFinal = DateTime.ParseExact("17092012", "ddMMyyyy", CultureInfo.InvariantCulture), Ncm = "", NcmEx = "", ExIpi = "" },
				new Ref4313() { Id = 79, Codigo = "402", Descricao = "Venda a varejo de máquinas automáticas para processamento de dados,digitais,portáteis,de peso inferior a 3,5Kg,com tela (écran) de área superior a 140cm2,classificadas nos códigos 8471.30.12, 8471.30.19 ou 8471.30.90 da TIPI,desde que o preço de venda de cada máquina não exceda a R$ 4.000,00", DataInicial = DateTime.ParseExact("01012009", "ddMMyyyy", CultureInfo.InvariantCulture), DataFinal = DateTime.ParseExact("17092012", "ddMMyyyy", CultureInfo.InvariantCulture), Ncm = "", NcmEx = "", ExIpi = "" },
				new Ref4313() { Id = 80, Codigo = "403", Descricao = "Venda a varejo de máquinas automáticas de processamento de dados,apresentadas sob a forma de sistemas,contendo exclusivamente 1 unidade de processamento digital,1 unidade de saída por vídeo (monitor),1 teclado (unidade de entrada),1 mouse (unidade de entrada),desde que o preço de venda de cada sistema não exceda a R$4.000,00", DataInicial = DateTime.ParseExact("01012009", "ddMMyyyy", CultureInfo.InvariantCulture), DataFinal = DateTime.ParseExact("17092012", "ddMMyyyy", CultureInfo.InvariantCulture), Ncm = "", NcmEx = "", ExIpi = "" },
				new Ref4313() { Id = 81, Codigo = "401", Descricao = "Venda a varejo de unidades de processamento digital classificadas no código 8471.50.10 da TIPI, desde que o preço de venda de cada unidade não exceda a R$ 2.000,00, produzidas no País conforme processo produtivo básico estabelecido pelo Poder Executivo", DataInicial = DateTime.ParseExact("18092012", "ddMMyyyy", CultureInfo.InvariantCulture), DataFinal = DateTime.ParseExact("30112015", "ddMMyyyy", CultureInfo.InvariantCulture), Ncm = "", NcmEx = "", ExIpi = "" },
				new Ref4313() { Id = 82, Codigo = "402", Descricao = "Venda a varejo de máquinas automáticas para processamento de dados, digitais, portáteis, de peso inferior a 3,5Kg, com tela de área superior a 140cm², classificadas nos códigos 8471.30.12, 8471.30.19 ou 8471.30.90 da Tipi, desde que o preço de venda de cada máquina não exceda a R$ 4.000,00, produzidas no País conforme processo produtivo básico", DataInicial = DateTime.ParseExact("18092012", "ddMMyyyy", CultureInfo.InvariantCulture), DataFinal = DateTime.ParseExact("30112015", "ddMMyyyy", CultureInfo.InvariantCulture), Ncm = "", NcmEx = "", ExIpi = "" },
				new Ref4313() { Id = 83, Codigo = "403", Descricao = "Venda a varejo de máquinas automáticas de processamento de dados,apresentadas sob a forma de sistemas,contendo exclusivamente 1 unidade de processamento digital,1 unidade de saída por vídeo,1 teclado,1 mouse,desde que o preço de venda de cada sistema não exceda a R$4.000,00,produzidas no País conforme processo produtivo básico", DataInicial = DateTime.ParseExact("18092012", "ddMMyyyy", CultureInfo.InvariantCulture), DataFinal = DateTime.ParseExact("30112015", "ddMMyyyy", CultureInfo.InvariantCulture), Ncm = "", NcmEx = "", ExIpi = "" },
				new Ref4313() { Id = 84, Codigo = "404", Descricao = "Venda a varejo de teclado (unidade de entrada) e de mouse (unidade de entrada) classificados, respectivamente, nos códigos 8471.60.52 e 8471.60.53 da TIPI, quando acompanharem a unidade de processamento digital classificada no código 8471.50.10 da TIPI, desde que o preço de venda de cada conjunto não exceda a R$ 2.100,00 (dois mil e cem reais)", DataInicial = DateTime.ParseExact("01012009", "ddMMyyyy", CultureInfo.InvariantCulture), DataFinal = DateTime.ParseExact("30112015", "ddMMyyyy", CultureInfo.InvariantCulture), Ncm = "", NcmEx = "", ExIpi = "" },
				new Ref4313() { Id = 85, Codigo = "405", Descricao = "PADIS - Programa de Apoio ao Desenvolvimento Tecnológico da Indústria de Semicondutores", DataInicial = DateTime.ParseExact("01012009", "ddMMyyyy", CultureInfo.InvariantCulture), DataFinal = null, Ncm = "", NcmEx = "", ExIpi = "" },
				new Ref4313() { Id = 86, Codigo = "406", Descricao = "PATVD - Programa de Apoio ao Desenvolvimento Tecnológico da Indústria de Equipamentos para a TV Digital", DataInicial = DateTime.ParseExact("01012009", "ddMMyyyy", CultureInfo.InvariantCulture), DataFinal = null, Ncm = "", NcmEx = "", ExIpi = "" },
				new Ref4313() { Id = 87, Codigo = "407", Descricao = "Venda a varejo de Tablet PC, classif. em 8471.41,prod. no País cfe. proc. produtivo básico estab. pelo P. Exec, desde que o preço de venda não exceda R$2.500,00", DataInicial = DateTime.ParseExact("23052011", "ddMMyyyy", CultureInfo.InvariantCulture), DataFinal = DateTime.ParseExact("30112015", "ddMMyyyy", CultureInfo.InvariantCulture), Ncm = "", NcmEx = "", ExIpi = "" },
				new Ref4313() { Id = 88, Codigo = "408", Descricao = "Venda, a varejo de modems, classificados nas posições 8517.62.55, 8517.62.62 ou 8517.62.72 da TIPI, desde que o preço de venda não exceda R$ 150,00 (cento e cinquenta reais)", DataInicial = DateTime.ParseExact("01012011", "ddMMyyyy", CultureInfo.InvariantCulture), DataFinal = DateTime.ParseExact("08042013", "ddMMyyyy", CultureInfo.InvariantCulture), Ncm = "", NcmEx = "", ExIpi = "" },
				new Ref4313() { Id = 89, Codigo = "408", Descricao = "Venda, a varejo de modems, classificados nas posições 8517.62.55, 8517.62.62 ou 8517.62.72 da TIPI, desde que o preço de venda não exceda R$ 200,00 (duzentos reais)", DataInicial = DateTime.ParseExact("09042013", "ddMMyyyy", CultureInfo.InvariantCulture), DataFinal = DateTime.ParseExact("30112015", "ddMMyyyy", CultureInfo.InvariantCulture), Ncm = "", NcmEx = "", ExIpi = "" },
				new Ref4313() { Id = 90, Codigo = "409", Descricao = "Venda a varejo de telefones portáteis de redes celulares que possibilitem o acesso à internet em alta velocidade do tipo smartphone classificados na posição 8517.12.31 da Tipi, produzidos no País conforme processo produtivo básico estabelecido pelo Poder Executivo", DataInicial = DateTime.ParseExact("18092012", "ddMMyyyy", CultureInfo.InvariantCulture), DataFinal = DateTime.ParseExact("08042013", "ddMMyyyy", CultureInfo.InvariantCulture), Ncm = "", NcmEx = "", ExIpi = "" },
				new Ref4313() { Id = 91, Codigo = "409", Descricao = "Venda a varejo de telefones portáteis de redes celulares que possibilitem o acesso à internet em alta velocidade do tipo smartphone (8517.12.31),prod. no País conf proc. produtivo básico estabelecido pelo Executivo, que obedeçam aos requisitos técnicos constantes de ato do Min. das Comunic., cujo valor de venda, a varejo, não exceda a R$1500,00", DataInicial = DateTime.ParseExact("09042013", "ddMMyyyy", CultureInfo.InvariantCulture), DataFinal = DateTime.ParseExact("30112015", "ddMMyyyy", CultureInfo.InvariantCulture), Ncm = "", NcmEx = "", ExIpi = "" },
				new Ref4313() { Id = 92, Codigo = "410", Descricao = "Venda a varejo de equipamentos terminais de clientes (roteadores digitais) classificados nas posições 8517.62.41 e 8517.62.77 da Tipi, desenvolvidos no País conforme processo produtivo básico estabelecido pelo Poder Executivo", DataInicial = DateTime.ParseExact("18092012", "ddMMyyyy", CultureInfo.InvariantCulture), DataFinal = DateTime.ParseExact("08042013", "ddMMyyyy", CultureInfo.InvariantCulture), Ncm = "", NcmEx = "", ExIpi = "" },
				new Ref4313() { Id = 93, Codigo = "410", Descricao = "Venda a varejo de equipamentos terminais de clientes (roteadores digitais) classificados nas posições 8517.62.41 e 8517.62.77, desenvolvidos no País conforme processo produtivo básico estabelecido pelo Poder Executivo, cujo valor de venda, a varejo, não exceda a R$ 150,00 (cento e cinquenta reais)", DataInicial = DateTime.ParseExact("09042013", "ddMMyyyy", CultureInfo.InvariantCulture), DataFinal = DateTime.ParseExact("30112015", "ddMMyyyy", CultureInfo.InvariantCulture), Ncm = "", NcmEx = "", ExIpi = "" },
				new Ref4313() { Id = 94, Codigo = "411", Descricao = "Venda dos produtos relacionados nos códigos 401, 402, 403, 404, 407, 408, 409 e 410 desta tabela, a pessoas jurídicas de direito privado ou por órgãos e entidades da Adm Púb Fed, Est ou Mun e do Distrito Federal, direta ou indireta, às fundações instituídas e mantidas pelo Poder Público e às demais organizações sob controle direto ou indireto", DataInicial = DateTime.ParseExact("01012011", "ddMMyyyy", CultureInfo.InvariantCulture), DataFinal = DateTime.ParseExact("30112015", "ddMMyyyy", CultureInfo.InvariantCulture), Ncm = "", NcmEx = "", ExIpi = "" },
				new Ref4313() { Id = 95, Codigo = "412", Descricao = "Venda dos produtos relacionados nos códigos 401, 402, 403, 404, 407, 408, 409 e 410 desta tabela, a sociedades de arrendamento mercantil leasing", DataInicial = DateTime.ParseExact("01012011", "ddMMyyyy", CultureInfo.InvariantCulture), DataFinal = DateTime.ParseExact("30112015", "ddMMyyyy", CultureInfo.InvariantCulture), Ncm = "", NcmEx = "", ExIpi = "" },
				new Ref4313() { Id = 96, Codigo = "413", Descricao = "Receita decorrente da venda de bens de defesa nacional definidos em ato do Poder Executivo efetuada por pessoa jurídica beneficiária do RETID à União, para uso privativo das Forças Armadas, exceto para uso pessoal e administrativo", DataInicial = DateTime.ParseExact("21092012", "ddMMyyyy", CultureInfo.InvariantCulture), DataFinal = null, Ncm = "", NcmEx = "", ExIpi = "" },
				new Ref4313() { Id = 97, Codigo = "414", Descricao = "Receita decorrente da prestação de serviços de tecnologia industrial básica, projetos, pesquisa, desenvolvimento e inovação tecnológica, assistência técnica e transferência de tecnologia por pessoa jurídica beneficiária do RETID à União, para uso privativo das Forças Armadas, exceto para uso pessoal e administrativo", DataInicial = DateTime.ParseExact("21092012", "ddMMyyyy", CultureInfo.InvariantCulture), DataFinal = null, Ncm = "", NcmEx = "", ExIpi = "" },
				new Ref4313() { Id = 98, Codigo = "901", Descricao = "Papel destinado à impressão de jornais", DataInicial = DateTime.ParseExact("01012009", "ddMMyyyy", CultureInfo.InvariantCulture), DataFinal = DateTime.ParseExact("30042016", "ddMMyyyy", CultureInfo.InvariantCulture), Ncm = "", NcmEx = "", ExIpi = "" },
				new Ref4313() { Id = 99, Codigo = "902", Descricao = "Papéis classificados nos códigos 4801.00.10, 4801.00.90, 4802.61.91, 4802.61.99, 4810.19.89 e 4810.22.90, todos da TIPI, destinados à impressão de periódicos", DataInicial = DateTime.ParseExact("01012009", "ddMMyyyy", CultureInfo.InvariantCulture), DataFinal = DateTime.ParseExact("30042016", "ddMMyyyy", CultureInfo.InvariantCulture), Ncm = "", NcmEx = "", ExIpi = "" },
				new Ref4313() { Id = 100, Codigo = "903", Descricao = "Livros, conforme definido no art. 2o da Lei no 10.753/03", DataInicial = DateTime.ParseExact("01012009", "ddMMyyyy", CultureInfo.InvariantCulture), DataFinal = null, Ncm = "", NcmEx = "", ExIpi = "" },
				new Ref4313() { Id = 101, Codigo = "904", Descricao = "Preparações compostas não-alcoólicas, classificadas no código 2106.90.10 Ex 01 da TIPI, destinadas à elaboração de bebidas pelas pessoas jurídicas industriais dos produtos referidos no art. 58-A da Lei no 10.833/2003", DataInicial = DateTime.ParseExact("01012009", "ddMMyyyy", CultureInfo.InvariantCulture), DataFinal = null, Ncm = "", NcmEx = "", ExIpi = "" },
				new Ref4313() { Id = 102, Codigo = "905", Descricao = "Material de defesa, classificado nas posições 87.10.00.00 e 89.06.10.00 da TIPI, além de partes, peças, componentes, ferramentais, insumos, equipamentos e matérias-primas a serem empregados na sua industrialização, montagem, manutenção, modernização e conversão", DataInicial = DateTime.ParseExact("01012009", "ddMMyyyy", CultureInfo.InvariantCulture), DataFinal = null, Ncm = "", NcmEx = "", ExIpi = "" },
				new Ref4313() { Id = 103, Codigo = "906", Descricao = "Equipamentos de controle de produção, inclusive medidores de vazão, condutivímetros, aparelhos para controle, registro, gravação e transmissão dos quantitativos medidos, quando adquiridos por pessoas jurídicas legalmente obrigadas à sua utilização", DataInicial = DateTime.ParseExact("01012009", "ddMMyyyy", CultureInfo.InvariantCulture), DataFinal = DateTime.ParseExact("19062014", "ddMMyyyy", CultureInfo.InvariantCulture), Ncm = "", NcmEx = "", ExIpi = "" },
				new Ref4313() { Id = 104, Codigo = "907", Descricao = "Valores pagos ou creditados pelos Estados, Distrito Federal e Municípios relativos ao ICMS e ao ISS, no âmbito de programas de concessão de crédito voltados ao estímulo à solicitação de documento fiscal na aquisição de mercadorias e serviços", DataInicial = DateTime.ParseExact("01012009", "ddMMyyyy", CultureInfo.InvariantCulture), DataFinal = null, Ncm = "", NcmEx = "", ExIpi = "" },
				new Ref4313() { Id = 105, Codigo = "908", Descricao = "Vendas de mercadorias destinadas ao consumo ou à industrialização na Zona Franca de Manaus  ZFM", DataInicial = DateTime.ParseExact("01012009", "ddMMyyyy", CultureInfo.InvariantCulture), DataFinal = null, Ncm = "", NcmEx = "", ExIpi = "" },
				new Ref4313() { Id = 106, Codigo = "909", Descricao = "Vendas de mercadorias destinadas ao consumo ou à industrialização nas Áreas de Livre Comércio - ALC", DataInicial = DateTime.ParseExact("01012009", "ddMMyyyy", CultureInfo.InvariantCulture), DataFinal = null, Ncm = "", NcmEx = "", ExIpi = "" },
				new Ref4313() { Id = 107, Codigo = "910", Descricao = "Vendas de matérias-primas, produtos intermediários e materiais de embalagem, produzidos na Zona Franca de Manaus para emprego em processo de industrialização por estabelecimentos industriais ali instalados e consoante projetos aprovados pelo SUFRAMA", DataInicial = DateTime.ParseExact("01012009", "ddMMyyyy", CultureInfo.InvariantCulture), DataFinal = null, Ncm = "", NcmEx = "", ExIpi = "" },
				new Ref4313() { Id = 108, Codigo = "911", Descricao = "Receitas financeiras, inclusive decorrentes de operações realizadas para fins de hedge, auferidas pelas pessoas jurídicas sujeitas ao regime de incidência não-cumulativa", DataInicial = DateTime.ParseExact("01012009", "ddMMyyyy", CultureInfo.InvariantCulture), DataFinal = null, Ncm = "", NcmEx = "", ExIpi = "" },
				new Ref4313() { Id = 109, Codigo = "912", Descricao = "Aquisição no mercado interno ou a importação, de forma combinada ou não, de mercadoria equivalente à empregada ou consumida na industrialização de produto exportado (Drawback Reposição de Estoque)", DataInicial = DateTime.ParseExact("01012009", "ddMMyyyy", CultureInfo.InvariantCulture), DataFinal = null, Ncm = "", NcmEx = "", ExIpi = "" },
				new Ref4313() { Id = 110, Codigo = "913", Descricao = "Projetores para exibição cinematográfica, classificados no código 9007.2 da NCM, e suas partes e acessórios, classificados no código 9007.9 da NCMs", DataInicial = DateTime.ParseExact("30092011", "ddMMyyyy", CultureInfo.InvariantCulture), DataFinal = null, Ncm = "", NcmEx = "", ExIpi = "" },
				new Ref4313() { Id = 111, Codigo = "914", Descricao = "Receita decorrente da venda de águas minerais naturais comercializadas em recipientes com capacidade nominal inferior a 10 (dez) litros ou igual ou superior a 10 (dez) litros classificadas no código 2201.10.00 Ex 01 e Ex 02 da Tipi, aprovada pelo Decreto no 7.660, de 23 de dezembro de 2011", DataInicial = DateTime.ParseExact("18092012", "ddMMyyyy", CultureInfo.InvariantCulture), DataFinal = null, Ncm = "22011000", NcmEx = "", ExIpi = "01" },
				new Ref4313() { Id = 112, Codigo = "914", Descricao = "Receita decorrente da venda de águas minerais naturais comercializadas em recipientes com capacidade nominal inferior a 10 (dez) litros ou igual ou superior a 10 (dez) litros classificadas no código 2201.10.00 Ex 01 e Ex 02 da Tipi, aprovada pelo Decreto no 7.660, de 23 de dezembro de 2011", DataInicial = DateTime.ParseExact("18092012", "ddMMyyyy", CultureInfo.InvariantCulture), DataFinal = null, Ncm = "22011000", NcmEx = "", ExIpi = "02" },
				new Ref4313() { Id = 113, Codigo = "915", Descricao = "Concessões de geração, transmissão e distribuição de energia elétrica - Valor da indenização correspondente às parcelas dos investimentos vinculados a bens reversíveis, ainda não amortizados ou não depreciados, conforme art. 8º, § 4º, da Lei nº 12.783/2013", DataInicial = DateTime.ParseExact("04042013", "ddMMyyyy", CultureInfo.InvariantCulture), DataFinal = null, Ncm = "", NcmEx = "", ExIpi = "" },
				new Ref4313() { Id = 114, Codigo = "916", Descricao = "Concessões de geração, transmissão e distribuição de energia elétrica - Valor da indenização correspondente às parcelas dos investimentos vinculados a bens reversíveis, ainda não amortizados ou não depreciados, conforme art. 15, § 9º, da Lei nº 12.783/2013", DataInicial = DateTime.ParseExact("04042013", "ddMMyyyy", CultureInfo.InvariantCulture), DataFinal = null, Ncm = "", NcmEx = "", ExIpi = "" },
				new Ref4313() { Id = 115, Codigo = "917", Descricao = "Valores efetivamente recebidos exclusivamente a título da subvenção extraordinária aos produtores fornecedores independentes de cana-de-açúcar afetados por condições climáticas adversas referente à safra 2011/2012 na Região Nordeste", DataInicial = DateTime.ParseExact("10102013", "ddMMyyyy", CultureInfo.InvariantCulture), DataFinal = null, Ncm = "", NcmEx = "", ExIpi = "" },
				new Ref4313() { Id = 116, Codigo = "999", Descricao = "Código genérico - Operações tributáveis à alíquota zero", DataInicial = DateTime.ParseExact("01012009", "ddMMyyyy", CultureInfo.InvariantCulture), DataFinal = null, Ncm = "", NcmEx = "", ExIpi = "" },
				new Ref4313() { Id = 117, Codigo = "906", Descricao = "Serviços ou equipamentos de controle de produção, inclusive medidores de vazão, condutivímetros, aparelhos para controle, registro, gravação e transmissão dos quantitativos medidos, quando adquiridos por pessoas jurídicas legalmente obrigadas à sua utilização, nos termos e condições fixados pela RFB", DataInicial = DateTime.ParseExact("20062014", "ddMMyyyy", CultureInfo.InvariantCulture), DataFinal = null, Ncm = "", NcmEx = "", ExIpi = "" },
				new Ref4313() { Id = 118, Codigo = "215", Descricao = "Receita decorrente da prestação de serviços regulares de transporte coletivo municipal rodoviário, metroviário, ferroviário e aquaviário de passageiros, alcançando as receitas decorrentes da prestação dos serviços -	no território de região metropolitana regularmente constituída e -	conforme definidos nos incisos XI a XIII do art. 4 da L. 12587/12", DataInicial = DateTime.ParseExact("14112014", "ddMMyyyy", CultureInfo.InvariantCulture), DataFinal = null, Ncm = "", NcmEx = "", ExIpi = "" },
				new Ref4313() { Id = 119, Codigo = "323", Descricao = "Equip/materiais destinados a uso médico, hospitalar, clínico ou laboratorial, conforme ato editado pelo Poder Executivo, quando adquiridos pela União, Estados, Distrito Federal ou Municípios, bem como pelas suas autarquias e fundações instituídas e mantidas pelo poder público ou por entidades beneficentes de assistência social q atendam a L12101/09", DataInicial = DateTime.ParseExact("14112014", "ddMMyyyy", CultureInfo.InvariantCulture), DataFinal = null, Ncm = "", NcmEx = "", ExIpi = "" },
				new Ref4313() { Id = 120, Codigo = "918", Descricao = "Receita decorrente da venda de bebidas frias, classificadas nos códigos 2106.90.10 Ex02; 22.01 (exceto os Ex 01 e Ex 02 do código 2201.10.00); 22.02 (exceto os Ex 01, Ex 02 e Ex 03 do código 2202.90.00); e 22.02.90.00 Ex 03 e 22.03 da TIPI, quando auferida pela pessoa jurídica varejista.", DataInicial = DateTime.ParseExact("01052015", "ddMMyyyy", CultureInfo.InvariantCulture), DataFinal = null, Ncm = "", NcmEx = "", ExIpi = "" },
				new Ref4313() { Id = 121, Codigo = "216", Descricao = "Álcool, Inclusive para Fins Carburantes - Venda por Distribuidor", DataInicial = DateTime.ParseExact("01092013", "ddMMyyyy", CultureInfo.InvariantCulture), DataFinal = DateTime.ParseExact("20072017", "ddMMyyyy", CultureInfo.InvariantCulture), Ncm = "", NcmEx = "", ExIpi = "" }
			);
		}
    }
}
